package core.commands;

import com.pengrad.telegrambot.TelegramBot;
import com.pengrad.telegrambot.model.Message;
import com.pengrad.telegrambot.model.request.InlineKeyboardButton;
import com.pengrad.telegrambot.model.request.InlineKeyboardMarkup;
import com.pengrad.telegrambot.model.request.ParseMode;
import com.pengrad.telegrambot.request.SendMessage;
import lombok.AllArgsConstructor;

import static core.commands.CommandsList.*;

@AllArgsConstructor
public class AlphabetCommandProcessor implements ChatCommandProcessor {

    private final Message message;
    private final TelegramBot bot;

    @Override
    public void execute() {
        var chatId = message.chat().id();
        String outputMessage = """
                üî§<b>–õ–µ–∑–≥–∏ –≥—å–∞—Ä—Ñ–∞—Ä (<a href="https://www.youtube.com/watch?v=z01MAVOtyNM"><i>—á–µ—à–º–µ</i></a>)</b>
                <b>–ò–ª–∏—Å —Å–∞ –≥—å–∞—Ä—Ñ—É–Ω–∞–ª —è–± –≥—É–¥–∞–π–≤–∞–ªüëáüèº</b>
                """;
        InlineKeyboardMarkup inlineKeyboardMarkup = createAlphabetButtons();
        bot.execute(new SendMessage(chatId, outputMessage)
                .replyMarkup(inlineKeyboardMarkup)
                .parseMode(ParseMode.HTML)
                .disableWebPagePreview(true));
    }

    private InlineKeyboardMarkup createAlphabetButtons() {
        String[][] alphabetMatrix = {
                {"–ê", "–ë", "–í", "–ì", "–ì—ä", "–ì—å"},
                {"–î", "–ï", "–ñ", "–ó", "–ò", "–ô"},
                {"–ö", "–ö—ä", "–ö—å", "–öI", "–õ", "–ú"},
                {"–ù", "–ü", "–üI", "–†", "–°", "–¢"},
                {"–¢I", "–£", "–£—å", "–§", "–•", "–•—ä"},
                {"–•—å", "–¶", "–¶I", "–ß", "–ßI", "–®"},
                {"–™", "–´", "–¨", "–≠", "–Æ", "–Ø"},
        };
        InlineKeyboardButton[][] buttons = new InlineKeyboardButton[7][6];
        for (int i = 0; i < 7; i++) {
            for (int j = 0; j < 6; j++) {
                buttons[i][j] = new InlineKeyboardButton(alphabetMatrix[i][j])
                        .callbackData(ALPHABET + EQUALS + alphabetMatrix[i][j] + EQUALS + "lez");
            }
        }
        return new InlineKeyboardMarkup(buttons);
    }
}